import BigNumber from "bignumber.js";
import { ApiReserveAssetDataEvent, DownsampledApiReserveAssetDataEvent } from "../lib/types";
import { ParsedReserve } from "./reserve";
export type ParsedReserveAssetDataEvent = ReturnType<typeof parseReserveAssetDataEvent>;
export declare const parseReserveAssetDataEvent: (event: ApiReserveAssetDataEvent, reserve: ParsedReserve) => {
    id: number;
    lendingMarketId: string;
    coinType: string;
    reserveId: string;
    availableAmount: BigNumber;
    depositedAmount: BigNumber;
    borrowedAmount: BigNumber;
    availableAmountUsd: BigNumber;
    depositedAmountUsd: BigNumber;
    borrowedAmountUsd: BigNumber;
    borrowAprPercent: BigNumber;
    depositAprPercent: BigNumber;
    ctokenSupply: BigNumber;
    cumulativeBorrowRate: BigNumber;
    price: BigNumber;
    smoothedPrice: BigNumber;
    minPrice: BigNumber;
    maxPrice: BigNumber;
    priceLastUpdateTimestampS: number;
    timestampS: number;
    digest: string;
    eventIndex: number;
    sender: string;
    utilizationPercent: BigNumber;
};
export type ParsedDownsampledApiReserveAssetDataEvent = ReturnType<typeof parseDownsampledApiReserveAssetDataEvent>;
export declare const parseDownsampledApiReserveAssetDataEvent: (event: DownsampledApiReserveAssetDataEvent, reserve: ParsedReserve) => {
    sampleTimestampS: number;
    id: number;
    lendingMarketId: string;
    coinType: string;
    reserveId: string;
    availableAmount: BigNumber;
    depositedAmount: BigNumber;
    borrowedAmount: BigNumber;
    availableAmountUsd: BigNumber;
    depositedAmountUsd: BigNumber;
    borrowedAmountUsd: BigNumber;
    borrowAprPercent: BigNumber;
    depositAprPercent: BigNumber;
    ctokenSupply: BigNumber;
    cumulativeBorrowRate: BigNumber;
    price: BigNumber;
    smoothedPrice: BigNumber;
    minPrice: BigNumber;
    maxPrice: BigNumber;
    priceLastUpdateTimestampS: number;
    timestampS: number;
    digest: string;
    eventIndex: number;
    sender: string;
    utilizationPercent: BigNumber;
};
